@page "/learnblazor/bindproperty"
<div class="row">
	<div class="col-6 border p-3">
		<h3 class="text-primary">Product -  Playground</h3>
		Input Price : <input type="number" @bind="@Product.Price" @bind:event="oninput" /> <br />
		Product Active <input type="checkbox" @bind="@Product.IsActive" /><br />
		<select @bind="@selectedProp">
			@foreach (var prop in Product.ProductProperties)
			{
				<option value="@prop.Key">@prop.Key</option>
			}
		</select>
	</div>

	<div class="col-6 border p-3">
		<h3 class="text-primary">Product -  data binding</h3>
		Name : @Product.Name <br />
		IsActive: @Product.IsActive <br />
		Price : @Product.Price <br />
		This Product Is : @(Product.IsActive ? "Active" : "Inactive") <br />
		Selected Prop : @selectedProp<br />
		@if (!string.IsNullOrEmpty(selectedProp))
		{
			<a>Selected Value : @Product.ProductProperties.FirstOrDefault(p => p.Key == selectedProp)?.Value</a>

			<br />
		}
	</div>
</div>
<div class="col-12 p-4">

<div class="text-success">Table</div>
<table class="table table-stripped">
	<thead>
		<tr>
			<th scope="col">#</th>
			<th scope="col">Product Name</th>
			<th scope="col">Price</th>
			<th scope="col">IsActive</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var product in ProductList)
		{
			<tr>
					<td>@product.Id</td>
					<td><input type="text" @bind="@product.Name" @bind:event="oninput" /></td>
					<td><input type="number" @bind="@product.Price" @bind:event="oninput" /></td>
					<td><input type="checkbox" @bind="@product.IsActive" /></td>
			</tr>
		}	
		
	</tbody>
</table>
</div>
<div class="col-12 p-4">

<div class="text-success">Product Summary</div>
@foreach(var product in ProductList)
{
		<div class="border p-3">
			<h4>@product.Name</h4>
			<p>Price : @product.Price</p>
			<p>IsActive : @product.IsActive</p>
		</div>

}

</div>

@code {
	private string selectedProp = "";
	Product Product = new()
	{
		Id=1,
		Name="Product 1",
		IsActive=true,
		Price=5,
			ProductProperties = new List<ProductProp>()
		{
			new ProductProp(){Id=1,Key="Prop 1",Value="Value 1"},
			new ProductProp(){Id=2,Key="Prop 2",Value="Value 2"},
			new ProductProp(){Id=3,Key="Prop 3",Value="Value 3"},
		}
	};
	List<Product>ProductList = new();
	protected override void OnInitialized()
	{
		ProductList.Add(new()
			{
				Id = 1,
				Name = "Midnight Blaze",
				IsActive = false,
				Price = 10,
				ProductProperties = new List<ProductProp>()
				{
					new ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
					 new ProductProp { Id = 2, Key = "Size", Value = "20oz"},
					new ProductProp { Id = 3, Key = "Color", Value="Purple" }
				}
			});

		ProductList.Add(new()
			{
				Id = 2,
				Name = "Blossom Lily",
				IsActive = true,
				Price = 15,
				ProductProperties = new List<ProductProp>()
			{
				new ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
				new ProductProp { Id = 2, Key = "Size", Value = "18oz" },
				new ProductProp {Id = 3,Key = "Color",Value = "White"}
			}
			});
	}

}
