@page "/blazorjs"
@inject IJSRuntime _JSRuntime;
<h3>Blazor JS</h3>

<div class="row">
	<button class="btn btn-secondary" @onclick="TestConfirmBox">Test Confirm button</button>
</div>
<div class="row">
	@if (ConfirmResult != false)
	{
		<p>Confirmation has been made</p>
	}
	else 
	{
		<p>Confirmation has not been made</p>
	}
</div>
<div class="row " >
	<button class="btn btn-danger m-2" style="width:200px" @onclick=" ToastrSuccess">
	Toastr success</button>
	
	<button class="btn btn-success m-2" style="width:200px"		@onclick="ToastrError ">
	Toastr failure</button>
</div>

<div class="row ">
	<button class="btn btn-danger m-2" style="width:200px" @onclick="SweetAlertSuccess">
		SweetAlert success
	</button>

	<button class="btn btn-success m-2" style="width:200px" @onclick="SweetAlertError ">
		SweetAlert failure
	</button>
</div>

@code {
	private string ConfirmMessage { get; set; } = " Are you sure u want to click here ?";
	private bool ConfirmResult { get; set; }
	private async Task TestConfirmBox()
	{
		ConfirmResult=await _JSRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
	}
	private async Task ToastrSuccess()
	{
			//await _JSRuntime.InvokeVoidAsync("showToastr", "success", "Success Notification");
		await _JSRuntime.ToastrSuccess("Success Notification");
	}
	private async Task ToastrError()
	{
		//await _JSRuntime.InvokeVoidAsync("showToastr", "error", "Error Notification");
		await _JSRuntime.ToastrError("sw");
	}
	private async Task SweetAlertError()
	{
		await _JSRuntime.InvokeVoidAsync("Swal.Fire", "error", "Error Notification");
	}
	private async Task SweetAlertSuccess()
	{
		await _JSRuntime.InvokeVoidAsync("Swal.Fire", "success", "Success Notification");
	}
}
